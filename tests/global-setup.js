const { chromium } = require('@playwright/test');

async function globalSetup() {
    console.log('üöÄ Rozpoczynam globalny setup test√≥w MAS V2...');
    
    // Test czy WordPress jest dostƒôpny
    const browser = await chromium.launch();
    const page = await browser.newPage();
    
    try {
        // Sprawd≈∫ czy WordPress odpowiada
        await page.goto('http://localhost:10013/wp-admin/', { 
            waitUntil: 'domcontentloaded',
            timeout: 10000 
        });
        
        // Sprawd≈∫ czy strona logowania jest dostƒôpna
        const loginForm = await page.locator('#loginform').isVisible();
        if (!loginForm) {
            throw new Error('WordPress login form not found');
        }
        
        console.log('‚úÖ WordPress jest dostƒôpny na localhost:10013');
        
        // Opcjonalnie: przygotuj testowƒÖ bazƒô danych lub cache
        await page.evaluate(() => {
            // Wyczy≈õƒá localStorage je≈õli potrzebne
            if (typeof(Storage) !== "undefined") {
                localStorage.clear();
                sessionStorage.clear();
            }
        });
        
        console.log('‚úÖ Przygotowanie ≈õrodowiska testowego zako≈Ñczone');
        
    } catch (error) {
        console.error('‚ùå B≈ÇƒÖd podczas setup:', error.message);
        throw new Error(`WordPress setup failed: ${error.message}`);
    } finally {
        await browser.close();
    }
    
    // Ustaw zmienne ≈õrodowiskowe dla test√≥w
    process.env.PLAYWRIGHT_TEST_BASE_URL = 'http://localhost:10013';
    process.env.PLAYWRIGHT_TEST_USERNAME = 'xxx';
    process.env.PLAYWRIGHT_TEST_PASSWORD = 'xxx';
    
    console.log('üéØ Global setup zako≈Ñczony pomy≈õlnie!');
}

module.exports = globalSetup; 