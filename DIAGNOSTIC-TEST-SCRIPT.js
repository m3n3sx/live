// üîß MAS V2 DIAGNOSTIC TEST SCRIPT
// Uruchom ten skrypt w konsoli przeglƒÖdarki na stronie ustawie≈Ñ wtyczki

console.log('üîß MAS V2 Diagnostic Test Script - Starting...');

// Test 1: Sprawd≈∫ dostƒôpno≈õƒá obiekt√≥w masV2/masV2Global
console.log('\nüìã TEST 1: Sprawdzenie dostƒôpno≈õci obiekt√≥w JavaScript');
console.log('masV2 object:', window.masV2);
console.log('masV2Global object:', window.masV2Global);

const masData = window.masV2 || window.masV2Global || {};
console.log('Merged masData:', masData);

// Test 2: Sprawd≈∫ nonce
console.log('\nüìã TEST 2: Sprawdzenie nonce');
console.log('masV2.nonce:', window.masV2?.nonce);
console.log('masV2Global.nonce:', window.masV2Global?.nonce);
console.log('Merged nonce:', masData.nonce);

if (!masData.nonce) {
    console.error('‚ùå PROBLEM: Brak nonce! AJAX requests bƒôdƒÖ nieudane.');
} else {
    console.log('‚úÖ Nonce available:', masData.nonce);
}

// Test 3: Sprawd≈∫ AJAX URL
console.log('\nüìã TEST 3: Sprawdzenie AJAX URL');
console.log('masV2.ajaxUrl:', window.masV2?.ajaxUrl);
console.log('masV2Global.ajaxUrl:', window.masV2Global?.ajaxUrl);
console.log('Merged ajaxUrl:', masData.ajaxUrl);

if (!masData.ajaxUrl) {
    console.error('‚ùå PROBLEM: Brak AJAX URL!');
} else {
    console.log('‚úÖ AJAX URL available:', masData.ajaxUrl);
}

// Test 4: Sprawd≈∫ formularz
console.log('\nüìã TEST 4: Sprawdzenie formularza');
const form = document.getElementById('mas-v2-settings-form');
console.log('Form element:', form);

if (!form) {
    console.error('‚ùå PROBLEM: Formularz #mas-v2-settings-form nie znaleziony!');
} else {
    console.log('‚úÖ Form found');
    console.log('Form method:', form.method);
    console.log('Form action:', form.action);
}

// Test 5: Sprawd≈∫ obiekt MAS
console.log('\nüìã TEST 5: Sprawdzenie obiektu MAS');
console.log('MAS object:', window.MAS);

if (!window.MAS) {
    console.error('‚ùå PROBLEM: Obiekt MAS nie znaleziony!');
} else {
    console.log('‚úÖ MAS object available');
    console.log('MAS.getMasData function:', typeof window.MAS.getMasData);
}

// Test 6: Sprawd≈∫ enable_plugin w settings
console.log('\nüìã TEST 6: Sprawdzenie enable_plugin');
const settings = masData.settings || {};
console.log('Settings object:', settings);
console.log('enable_plugin value:', settings.enable_plugin);

if (settings.enable_plugin === false) {
    console.warn('‚ö†Ô∏è WARNING: enable_plugin = false - wtyczka jest wy≈ÇƒÖczona!');
} else if (settings.enable_plugin === true) {
    console.log('‚úÖ enable_plugin = true');
} else {
    console.warn('‚ö†Ô∏è WARNING: enable_plugin = undefined/null');
}

// Test 7: Test AJAX Request (tylko test nonce, bez zapisywania)
console.log('\nüìã TEST 7: Test AJAX Request (dry run)');
if (masData.ajaxUrl && masData.nonce) {
    const testData = {
        action: 'mas_v2_save_settings',
        nonce: masData.nonce,
        test_field: 'diagnostic_test'
    };
    
    console.log('Test AJAX data:', testData);
    console.log('üîÑ Simulating AJAX request...');
    
    // Simulated request - nie wysy≈Çamy rzeczywistego
    console.log('‚úÖ AJAX request would be sent with valid nonce');
} else {
    console.error('‚ùå CANNOT TEST AJAX: Missing ajaxUrl or nonce');
}

// Test 8: Sprawd≈∫ loaded scripts
console.log('\nüìã TEST 8: Sprawdzenie za≈Çadowanych skrypt√≥w');
const scripts = Array.from(document.querySelectorAll('script[src*="mas-v2"]'));
console.log('MAS V2 scripts found:', scripts.length);
scripts.forEach((script, index) => {
    console.log(`Script ${index + 1}:`, script.src);
});

// Test 9: Sprawd≈∫ CSS styles
console.log('\nüìã TEST 9: Sprawdzenie CSS styles');
const styles = Array.from(document.querySelectorAll('link[href*="mas-v2"], style[id*="mas-v2"]'));
console.log('MAS V2 styles found:', styles.length);
styles.forEach((style, index) => {
    console.log(`Style ${index + 1}:`, style.href || 'inline style');
});

// Test 10: Summary
console.log('\nüìã SUMMARY - Podsumowanie diagnostyki');

const tests = [
    { name: 'masV2/masV2Global objects', status: !!(window.masV2 || window.masV2Global) },
    { name: 'nonce available', status: !!masData.nonce },
    { name: 'ajaxUrl available', status: !!masData.ajaxUrl },
    { name: 'form found', status: !!form },
    { name: 'MAS object', status: !!window.MAS },
    { name: 'enable_plugin = true', status: settings.enable_plugin === true },
    { name: 'scripts loaded', status: scripts.length > 0 },
    { name: 'styles loaded', status: styles.length > 0 }
];

tests.forEach(test => {
    const icon = test.status ? '‚úÖ' : '‚ùå';
    console.log(`${icon} ${test.name}: ${test.status ? 'OK' : 'FAILED'}`);
});

const failedTests = tests.filter(test => !test.status);
if (failedTests.length === 0) {
    console.log('\nüéâ ALL TESTS PASSED! Wtyczka powinna dzia≈Çaƒá poprawnie.');
} else {
    console.log(`\n‚ö†Ô∏è ${failedTests.length} TEST(S) FAILED. Problemy do naprawy:`);
    failedTests.forEach(test => {
        console.log(`- ${test.name}`);
    });
}

console.log('\nüîß Diagnostic test completed. Check results above.');

// Instrukcje dalszych krok√≥w
console.log('\nüìã NEXT STEPS - Dalsze kroki:');
console.log('1. Je≈õli nonce FAILED: Sprawd≈∫ czy jeste≈õ na stronie zak≈Çadki (mas-v2-general, etc.)');
console.log('2. Je≈õli form FAILED: Sprawd≈∫ czy ID formularza to "mas-v2-settings-form"');
console.log('3. Je≈õli enable_plugin FAILED: Sprawd≈∫ warto≈õƒá w bazie: SELECT option_value FROM wp_options WHERE option_name = "mas_v2_settings";');
console.log('4. Je≈õli scripts/styles FAILED: Sprawd≈∫ czy hook enqueue dzia≈Ça poprawnie');
console.log('5. Po naprawach: Od≈õwie≈º stronƒô i uruchom test ponownie'); 